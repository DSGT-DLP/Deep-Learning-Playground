name: Python Package (Poetry)

on:
  push:
    branches:
      - main
      - prod-deploy
  pull_request:
    paths:
      - "training/**"
      - pyproject.toml

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9.17"
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: training/.venv
          key: training-venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/training/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: cd training && poetry install --no-interaction --no-root

      #----------------------------------------------
      #              run test suite with moto
      #----------------------------------------------
      - name: Run tests with moto
        run: |
          source training/.venv/bin/activate
          moto_server s3 -p 5000 &  # Start moto S3 server in the background
          export AWS_ACCESS_KEY_ID=testing
          export AWS_SECRET_ACCESS_KEY=testing
          export AWS_DEFAULT_REGION=us-west-2
      # cd training && pytest tests
