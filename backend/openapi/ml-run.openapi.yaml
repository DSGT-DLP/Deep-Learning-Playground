openapi: "3.0.0"
info:
  title: DLP API
  description: API endpoints for the Deep Learning Playground Project
  version: "1.0.0"
paths:
  /api/ml-run:
    post:
      description: End point to train classical ml models
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_arch
                - csv_data
                - target
                - features
                - using_default_dataset
                - shuffle
                - problem_type
              properties:
                user_arch:
                  type: array
                  description: Architecture of the model
                csv_data:
                  type: object
                  description: csv input data
                target:
                  type: string
                  description: selected target column
                features:
                  type: array
                  description: selected features
                using_default_dataset:
                  type: string
                  description: default dataset selected
                shuffle:
                  type: boolean
                  description: determines whether to shuffle the datasets
                problem_type:
                  type: string
                  description: problem type selected (classification, regression)
              example:
                user_arch: [val1, val2, val3]
                csv_data: { "col1": [val1, val2], "col2": [val3, val4] }
                target: "target"
                features: [val1, val2, val3]
                using_default_dataset: "IRIS"
                shuffle: True
                prbolem_type: "regression"
        required: true
      responses:
        "200":
          description: Trained model successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dataset trained and results outputted successfully"
                  dl_results:
                    type: object
                    example: { "col1": [val1, val2], "col2": [val3, val4] }
                  auxiliary_outputs:
                    type: object
                    example: { "col1": [val1, val2], "col2": [val3, val4] }
        "400":
          description: Training didn't go through successfully. This is usually something wrong with your code
        "401":
          description: User is not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User is not authenticated"
